/*
 *  genPieces.cpp
 *  cc65 Chess
 *
 *  Created by Oliver Schmidt, January 2020.
 *  Pieces designed by Frank Gebhart, 1980s.
 *  Modified for C64 by S. Wessels, May 2020.
 *
 */

#include <fcntl.h>
#ifdef _WIN32
#include <io.h>
#else
#include <unistd.h>
#endif

#include <stdio.h>
#include <memory.h>
#include <string.h>

char pieces[]=
"                        "
"                        "
"   ****   *****   ****  "
"   *  *   *   *   *  *  "
"   *  *   *   *   *  *  "
"   *  *****   *****  *  "
"   *                 *  "
"    *               *   "
"     *             *    "
"      * ********* *     "
"      **         **     "
"       *         *      "
"       *         *      "
"       *         *      "
"       *         *      "
"       *         *      "
"      *           *     "
"     *             *    "
"     * *********** *    "
"    *               *   "
"   *******************  "
"   *******************  "
"                        "
"                        "
"                        "
"                        "
"   ****   *****   ****  "
"   ****   *****   ****  "
"   ****   *****   ****  "
"   *******************  "
"   *******************  "
"    *****************   "
"     ***************    "
"      *************     "
"      *           *     "
"       ***********      "
"       ***********      "
"       ***********      "
"       ***********      "
"       ***********      "
"      *************     "
"     ***************    "
"     ***************    "
"    *               *   "
"   *******************  "
"   *******************  "
"                        "
"                        "
"                        "
"                        "
"         *   *          "
"        * * * *         "
"       *    *  *        "
"       *        *       "
"      *          *      "
"      *   *    * *      "
"      *        * *      "
"     *         ** *     "
"    *           * *     "
"   *              *     "
"   *    ****      *     "
"    *  *    *   * **    "
"     **    *    ** *    "
"          *      *  *   "
"         *        * *   "
"        *           **  "
"       *             *  "
"      * ************ *  "
"      *              *  "
"      ****************  "
"                        "
"                        "
"                        "
"                        "
"         *   *          "
"        * * * *         "
"       ***** ***        "
"       **********       "
"      ************      "
"      **** **** **      "
"      ********* **      "
"     **********  **     "
"    ************ **     "
"   ****************     "
"   ****************     "
"    ****    **** ***    "
"     **    *****  **    "
"          ******* ***   "
"         ********* **   "
"        **************  "
"       ***************  "
"      *              *  "
"      ****************  "
"      ****************  "
"                        "
"                        "
"                        "
"                        "
"                        "
"           ***          "
"          *   *         "
"         *     *        "
"        *   *   *       "
"       *    *    *      "
"       * ******* *      "
"      *     *     *     "
"      *     *     *     "
"      *     *     *     "
"       *    *    *      "
"       *         *      "
"        *       *       "
"         *******        "
"         *     *        "
"         *     *        "
"          *****         "
"       *         *      "
"     ***************    "
"    *****************   "
"                        "
"                        "
"                        "
"                        "
"                        "
"           ***          "
"          *****         "
"         *******        "
"        **** ****       "
"       ***** *****      "
"       **       **      "
"      ****** ******     "
"      ****** ******     "
"      ****** ******     "
"       ***** *****      "
"       ***********      "
"        *********       "
"         *     *        "
"         *******        "
"         *******        "
"          *****         "
"       ***********      "
"     *             *    "
"    *****************   "
"                        "
"                        "
"                        "
"                        "
"                        "
"           ***          "
"          *   *         "
"     ***  *   *  ***    "
"    *   *  * *  *   *   "
"   *    * *   * *    *  "
"   *   * *     * *   *  "
"   *                 *  "
"   *   *    *    *   *  "
"   *   **  ***  **   *  "
"    *   *********   *   "
"    *    *******    *   "
"     *             *    "
"     *             *    "
"     * *********** *    "
"      *           *     "
"      *           *     "
"      *           *     "
"      **         **     "
"       ***********      "
"                        "
"                        "
"                        "
"                        "
"                        "
"           ***          "
"          *****         "
"     ***  *****  ***    "
"    *****  ***  *****   "
"   ****** ***** ******  "
"   ***** ******* *****  "
"   *******************  "
"   **** **** **** ****  "
"   ****  **   **  ****  "
"    ****         ****   "
"    *****       *****   "
"     ***************    "
"     ***************    "
"     **           **    "
"      *************     "
"      *************     "
"      *************     "
"      *************     "
"       ***********      "
"                        "
"                        "
"                        "
"                        "
"           ***          "
"           * *          "
"         *** ***        "
"         **   **        "
"       **  * *  **      "
"      *  * * * *  *     "
"     *    ** **    *    "
"    *      * *      *   "
"    *  *  *   *  *  *   "
"   *  *    * *    *  *  "
"   *  *     *     *  *  "
"   *   *    *    *   *  "
"    *   *       *   *   "
"    *    *     *    *   "
"     *             *    "
"     *  *********  *    "
"      *           *     "
"      *           *     "
"      **         **     "
"       ***********      "
"                        "
"                        "
"                        "
"                        "
"           ***          "
"           * *          "
"         *** ***        "
"         **   **        "
"       **  * *  **      "
"      **** * * ****     "
"     ******* *******    "
"    *******   *******   "
"    *** ** * * ** ***   "
"   *** ****   **** ***  "
"   *** ***** ***** ***  "
"   **** ********* ****  "
"    **** ******* ****   "
"    ***** ***** *****   "
"     ***************    "
"     **           **    "
"      *************     "
"      *************     "
"      *************     "
"       ***********      "
"                        "
"                        "
"                        "
"                        "
"                        "
"                        "
"                        "
"                        "
"           ***          "
"          *   *         "
"         *     *        "
"         *     *        "
"         *     *        "
"          *   *         "
"           ***          "
"          *   *         "
"          *   *         "
"         **   **        "
"          *   *         "
"          *   *         "
"         *******        "
"        *       *       "
"       ***********      "
"       ***********      "
"                        "
"                        "
"                        "
"                        "
"                        "
"                        "
"                        "
"                        "
"           ***          "
"          *****         "
"         *******        "
"         *******        "
"         *******        "
"          *****         "
"           ***          "
"          *****         "
"          *****         "
"         *******        "
"          *****         "
"          *****         "
"         *******        "
"        *       *       "
"       ***********      "
"       ***********      "
"                        "
"                        "
;

int main(void)
{
    unsigned char b = 0;
    unsigned char c[24][3];
    int col, row, color;

    col = row = color = 0;
    memset(c, 0, sizeof(c));
    printf("char hires_pieces[6][2][SQUARE_TEXT_WIDTH * SQUARE_DISPLAY_HEIGHT] = \n{\n");
    for(int i=0; i<sizeof(pieces); ++i) {
        b |= (pieces[i] == '*') << ((7-i) % 8);
        if (i % 8 == 7) {
            c[row][col] = b;
            b = 0;
            if(++col == 3) {
                if(++row == 3*8) {
                    if(0 == color) {
                        printf("\t{\n");
                    }
                    printf("\t\t{\n");
                    for(int line = 0; line < 3; line++) {
                        for(col = 0; col < 3; col++) {
                            printf("\t\t\t");
                            for(row = 0; row < 8; row++) {
                                printf("0x%02X, ", c[line*8+row][col]);
                            }
                            printf("\n");
                        }
                    }
                    printf("\t\t},\n");
                    memset(c, 0, sizeof(c));
                    if(++color == 2) {
                        printf("\t},\n");
                        color = 0;
                    }
                    row = 0;
                }
                col = 0;
            }
        }
    }
    printf("}");

    return 0;
}
